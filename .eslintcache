[{"W:\\WebDev\\REACT\\spotify\\clone\\src\\index.js":"1","W:\\WebDev\\REACT\\spotify\\clone\\src\\reportWebVitals.js":"2","W:\\WebDev\\REACT\\spotify\\clone\\src\\context.js":"3","W:\\WebDev\\REACT\\spotify\\clone\\src\\App.js":"4","W:\\WebDev\\REACT\\spotify\\clone\\src\\reducer.js":"5","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\CreatePlaylist.js":"6","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\YourLibrary.js":"7","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Search.js":"8","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Home.js":"9","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\LikedSongs.js":"10","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Error.js":"11","W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Login.js":"12","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Sidebar.js":"13","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Footer.js":"14","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Header.js":"15","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Loading.js":"16","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Album.js":"17","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Artists.js":"18","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Song.js":"19","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Playlists.js":"20","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\SearchForm.js":"21","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\DefaultSearchResult.js":"22","W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Category.js":"23"},{"size":592,"mtime":1610906263000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1610906266000,"results":"26","hashOfConfig":"25"},{"size":13011,"mtime":1610906263000,"results":"27","hashOfConfig":"25"},{"size":2539,"mtime":1610906261000,"results":"28","hashOfConfig":"25"},{"size":2318,"mtime":1610906266000,"results":"29","hashOfConfig":"25"},{"size":2444,"mtime":1610906263000,"results":"30","hashOfConfig":"25"},{"size":1286,"mtime":1610906265000,"results":"31","hashOfConfig":"25"},{"size":289,"mtime":1610906265000,"results":"32","hashOfConfig":"25"},{"size":1269,"mtime":1610906265000,"results":"33","hashOfConfig":"25"},{"size":805,"mtime":1610906265000,"results":"34","hashOfConfig":"25"},{"size":150,"mtime":1610906265000,"results":"35","hashOfConfig":"25"},{"size":6006,"mtime":1610906265000,"results":"36","hashOfConfig":"25"},{"size":3974,"mtime":1610906262000,"results":"37","hashOfConfig":"25"},{"size":2410,"mtime":1610906262000,"results":"38","hashOfConfig":"25"},{"size":1800,"mtime":1610906262000,"results":"39","hashOfConfig":"25"},{"size":177,"mtime":1610906262000,"results":"40","hashOfConfig":"25"},{"size":797,"mtime":1610906261000,"results":"41","hashOfConfig":"25"},{"size":855,"mtime":1610906262000,"results":"42","hashOfConfig":"25"},{"size":673,"mtime":1610906262000,"results":"43","hashOfConfig":"25"},{"size":1988,"mtime":1610906262000,"results":"44","hashOfConfig":"25"},{"size":2405,"mtime":1610906262000,"results":"45","hashOfConfig":"25"},{"size":873,"mtime":1610906262000,"results":"46","hashOfConfig":"25"},{"size":744,"mtime":1610906262000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"wqpk8i",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"W:\\WebDev\\REACT\\spotify\\clone\\src\\index.js",[],["96","97"],"W:\\WebDev\\REACT\\spotify\\clone\\src\\reportWebVitals.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\context.js",["98"],"import React, { createContext, useReducer, useContext, useEffect, useState, useCallback, } from 'react';\r\nimport reducer from './reducer';\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\n\r\nexport const context = createContext();\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const [select, setSelect] = useState('home');\r\n    const [newSidebar, setNewSidebar] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [searchLoading, setSearchLoading] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('default search');\r\n    const location = window.location.hash;\r\n    const [searchBar, setSearchBar] = useState('');\r\n    const limitCount = Math.floor(window.innerWidth / 220);\r\n    const limitCountForCategory = limitCount * 6;\r\n    // console.log(limitCountForCategory);\r\n    let __categories = [];\r\n\r\n\r\n    const getTokenFromResponse = () => {\r\n        return window.location.hash\r\n            .substring(1)\r\n            .split(\"&\")\r\n            .reduce((initial, item) => {\r\n                var parts = item.split(\"=\");\r\n                initial[parts[0]] = decodeURIComponent(parts[1]);\r\n                return initial;\r\n            }, {});\r\n    };\r\n    const fetchData = () => {\r\n        try {\r\n            let hash = getTokenFromResponse();\r\n            let _token = hash.access_token;\r\n            // console.log(_token);\r\n            setLoading(true);\r\n            if (_token) {\r\n                //set access token spotify authetication + user details\r\n                spotify.setAccessToken(_token);\r\n                dispatch({\r\n                    type: 'SET_TOKEN',\r\n                    token: _token,\r\n                });\r\n                //gets users details like p.pic name etc\r\n                spotify.getMe()\r\n                    .then((user) => {\r\n                        dispatch({\r\n                            type: 'SET_USER',\r\n                            user,\r\n                        });\r\n                    }, function (err) {\r\n                        console.log('Something went wrong!', err);\r\n                    })\r\n                    .then(\r\n                        //gets users palylists\r\n                        spotify.getUserPlaylists().then((playlists) => {\r\n                            dispatch({\r\n                                type: 'SET_PLAYLISTS',\r\n                                playlists: playlists.body.items,\r\n                            });\r\n                        }, function (err) {\r\n                            console.log('Something went wrong!', err);\r\n                        }))\r\n                    .then(\r\n                        spotify.getMySavedAlbums({ offset: 0 })\r\n                            .then(mySavedAlbums => {\r\n                                dispatch({\r\n                                    type: 'SET_MY_SAVED_ALBUMS',\r\n                                    mySavedAlbums: mySavedAlbums.body.items,\r\n                                });\r\n                                // console.log(mySavedAlbums.body.items);\r\n                            }, function (err) {\r\n                                console.log('Something went wrong!', err);\r\n                            }))\r\n                    .then(\r\n                        spotify.getFollowedArtists({ limit: 15 })\r\n                            .then(followedArtists => {\r\n                                dispatch({\r\n                                    type: 'SET_FOLLOWED_ARTISTS',\r\n                                    followedArtists: followedArtists.body.artists.items,\r\n                                });\r\n                                // console.log('This user is following ', followedArtists.body.artists.total, ' artists!');\r\n                            }, function (err) {\r\n                                console.log('Something went wrong!', err);\r\n                            }))\r\n                    .then(\r\n                        //  Retrieve featured playlists\r\n                        spotify.getFeaturedPlaylists({ limit: limitCount, offset: 1, country: 'IN', locale: 'sv_IN', timestamp: '2014-10-23T09:00:00' })\r\n                            .then(featuredPlaylists => {\r\n                                // console.log(featuredPlaylists.body.playlists.items);\r\n                                dispatch({\r\n                                    type: 'SET_FEATURED_PLAYLISTS',\r\n                                    featuredPlaylists: featuredPlaylists.body.playlists.items,\r\n                                });\r\n                            }, function (err) {\r\n                                console.log('Something went wrong!', err);\r\n                            }))\r\n                    .then(\r\n                        // Retrieve new releases\r\n                        spotify.getNewReleases({ limit: limitCount, offset: 0, country: 'IN' })\r\n                            .then(newReleasePlaylists => {\r\n                                // console.log(newReleasePlaylists.body.albums.items);\r\n                                dispatch({\r\n                                    type: 'SET_NEW_RELEASE_PLAYLISTS',\r\n                                    newReleasePlaylists: newReleasePlaylists.body.albums.items,\r\n                                });\r\n                            }, function (err) {\r\n                                console.log('Something went wrong!', err);\r\n                            }))\r\n                    .then(\r\n                        spotify.getRecommendations({\r\n                            limit: limitCount,\r\n                            min_energy: 0.4,\r\n                            seed_artists: ['7bXgB6jMjp9ATFy66eO08Z', '06HL4z0CvFAxyc27GXpf02'],\r\n                            min_popularity: 80\r\n                        })\r\n                            .then((recommendations) => {\r\n                                dispatch({\r\n                                    type: 'SET_RECOMMENDATIONS',\r\n                                    recommendations: recommendations.body.tracks,\r\n                                });\r\n                            }, function (err) {\r\n                                console.log(\"Something went wrong!\", err);\r\n                            })\r\n                    ).then(\r\n                        // Get tracks in the signed in user's Your Music library\r\n                        spotify.getMySavedTracks({ offset: 0 })\r\n                            .then(mySavedTracks => {\r\n                                dispatch({\r\n                                    type: 'SET_MY_SAVED_TRACKS',\r\n                                    mySavedTracks: mySavedTracks.body.items,\r\n                                });\r\n                                // console.log(mySavedTracks.body.items);\r\n                            }, function (err) {\r\n                                console.log('Something went wrong!', err);\r\n                            })\r\n                    )\r\n                    .then(\r\n                        // Get a List of Categories\r\n                        spotify.getCategories({\r\n                            limit: limitCountForCategory, offset: 0, country: 'IN', locale: 'sv_IN'\r\n                        }).then(categories => {\r\n                            // console.log(categories);\r\n                            dispatch({\r\n                                type: 'SET_CATEGORIES',\r\n                                categories: categories.body.categories.items,\r\n                            });\r\n                            // console.log('cc', categories.body.categories.items);\r\n                            categories.body.categories.items.slice(0, 5).map(category => {\r\n                                spotify.getPlaylistsForCategory(category.id, { country: 'IN', limit: limitCount, offset: 0 }).then(playlists => {\r\n                                    // console.log(category.name, playlists.body.playlists.items);\r\n                                    __categories.push({ id: category.id, name: category.name, playlists: playlists.body.playlists.items });\r\n                                });\r\n                                return ((category));\r\n                            });\r\n                            dispatch({\r\n                                type: 'SET_CATEGORIES_WITH_PLAYLISTS',\r\n                                categories_with_playlists: __categories,\r\n                            }, function (err) {\r\n                                console.log('Something went wrong!', err);\r\n                            });\r\n                        }, function (err) {\r\n                            console.log('Something went wrong!', err);\r\n                        }));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchData();\r\n        let to;\r\n        to = setTimeout(() => {\r\n            setLoading(false);\r\n        }, 3000);\r\n        return () => {\r\n            clearTimeout(to);\r\n        };\r\n    }, []);\r\n\r\n    const fetchDataForSearchTerm = useCallback(() => {\r\n        // console.log(searchTerm);\r\n        try {\r\n\r\n            if (searchTerm !== '') {\r\n                spotify.searchTracks(searchTerm)\r\n                    .then(searchTracks => {\r\n                        dispatch({\r\n                            type: 'SET_SEARCH_TRACKS',\r\n                            searchTracks: searchTracks.body.tracks.items,\r\n                        });\r\n                    }, function (err) {\r\n                        console.error(err);\r\n                    }).then\r\n                    (spotify.searchArtists(searchTerm)\r\n                        .then(searchArtists => {\r\n                            dispatch({\r\n                                type: 'SET_SEARCH_ARTISTS',\r\n                                searchArtists: searchArtists.body.artists.items,\r\n                            });\r\n                        }, function (err) {\r\n                            console.error(err);\r\n                        })).then\r\n                    (spotify.searchPlaylists(searchTerm)\r\n                        .then(searchPlaylists => {\r\n                            dispatch({\r\n                                type: 'SET_SEARCH_PLAYLISTS',\r\n                                searchPlaylists: searchPlaylists.body.playlists.items,\r\n                            });\r\n                        }, function (err) {\r\n                            console.log('Something went wrong!', err);\r\n                        }));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            console.log('nothing found');\r\n\r\n        }\r\n    }, [searchTerm]);\r\n    useEffect(() => {\r\n        fetchDataForSearchTerm();\r\n        let to;\r\n        to = setTimeout(() => {\r\n            setSearchLoading(false);\r\n        }, 1000);\r\n        return () => {\r\n            clearTimeout(to);\r\n        };\r\n    }, [fetchDataForSearchTerm, searchTerm]);\r\n\r\n    const updateSidebar = useCallback(() => {\r\n        if (newSidebar !== null) {\r\n            spotify.getUserPlaylists().then((playlists) => {\r\n                dispatch({\r\n                    type: 'SET_PLAYLISTS',\r\n                    playlists: playlists.body.items,\r\n                });\r\n            }, function (err) {\r\n                console.log('Something went wrong!', err);\r\n            });\r\n        }\r\n    }, [newSidebar]);\r\n\r\n    return (<context.Provider\r\n        value={{\r\n            ...state,\r\n            accessUrl,\r\n            loading,\r\n            setLoading,\r\n            setSearchTerm,\r\n            searchTerm,\r\n            searchLoading,\r\n            limitCount,\r\n            location,\r\n            searchBar,\r\n            setSearchBar,\r\n            select,\r\n            setSelect,\r\n            spotify,\r\n            newSidebar,\r\n            setNewSidebar,\r\n            updateSidebar,\r\n        }\r\n        }>\r\n        { children}\r\n    </context.Provider >);\r\n};\r\nexport const useGlobalContext = () => {\r\n    return useContext(context);\r\n};\r\nconst initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    spotify: null,\r\n    discover_weekly: null,\r\n    top_artists: null,\r\n    playing: false,\r\n    item: null,\r\n};\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n// Replace with your app's client ID, redirect URI and desired scopes\r\nconst clientId = \"cff76213089a4e228206c8bf120d67cb\";\r\nconst redirectUri = \"http://localhost:3000/\";\r\n// const redirectUri = \"https://f1ex-spotify.web.app/\";\r\n\r\nconst scopes = [\r\n    \"user-read-currently-playing\",\r\n    \"user-read-recently-played\",\r\n    \"user-read-playback-state\",\r\n    \"user-top-read\",\r\n    \"user-modify-playback-state\",\r\n    \"playlist-modify-public\",\r\n    \"playlist-read-collaborative\",\r\n    \"user-library-read\",\r\n    \"ugc-image-upload\",\r\n    \"user-follow-read\",\r\n];\r\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n    \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n\r\n\r\n","W:\\WebDev\\REACT\\spotify\\clone\\src\\App.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\reducer.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\CreatePlaylist.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\YourLibrary.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Search.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Home.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\LikedSongs.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Error.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Pages\\Login.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Sidebar.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Footer.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Header.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Loading.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Album.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Artists.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Song.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Playlists.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\SearchForm.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\DefaultSearchResult.js",[],"W:\\WebDev\\REACT\\spotify\\clone\\src\\Components\\Category.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":184,"column":8,"nodeType":"105","endLine":184,"endColumn":10,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [fetchData]",{"range":"112","text":"113"},[9046,9048],"[fetchData]"]